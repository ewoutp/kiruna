{
  "name": "grunt-publish",
  "description": "Automatically publish to NPM registry one or more modules",
  "version": "0.0.5",
  "homepage": "https://github.com/maxleiko/grunt-publish",
  "author": {
    "name": "Maxime Tricoire",
    "email": "max.tricoire@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/maxleiko/grunt-publish.git"
  },
  "bugs": {
    "url": "https://github.com/maxleiko/grunt-publish/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/maxleiko/grunt-publish/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "async": "^0.2.10",
    "npm": "^1.4.4",
    "npmi": "0.0.12"
  },
  "readme": "# grunt-publish\n\n> Automatically publish to NPM registry one or more modules\n\n## Getting Started\nThis plugin requires Grunt `~0.4.2`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-publish --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-publish');\n```\n\n## The \"publish\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `publish` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n    publish: {\n        main: {\n            src: [\n                'test/fixtures/aFolder/another-module',\n                'test/fixtures/fake-module'\n            ]\n        },\n        regex: {\n            src: ['test/fixtures/**/*']\n        }\n    },\n});\n```\n\n### Options\n\n#### options.ignore\nType: `Array`\nDefault value: `'['node_modules']'`\n\nAn array containing different keywords that you want to ignore for publishing.\nFor example:\n```js\npublish: {\n    main: {\n        options: {\n            ignore: ['node_modules', 'foo']\n        },\n        src: [\n            'test/fixtures/aFolder/another-module',\n            'test/fixtures/fake-module'\n        ]\n    }\n},\n```\n\n#### options.registry\nType: `String`\nDefault value: `null` (default npm registry)\n\nModify publishing registry\nFor example:\n```js\npublish: {\n    main: {\n        options: {\n            registry: 'https://my-own-registry.foo'\n        },\n        src: [\n            'test/fixtures/aFolder/another-module',\n            'test/fixtures/fake-module'\n        ]\n    }\n},\n```\n\nWill publish your module to the specified registry instead of registry.npmjs.org. If `options.registry` isn't specified, `https://registry.npmjs.org`Â is used.\n\n#### options.installBefore\nType: `boolean`\nDefault value: `false`\n\nWill install module dependencies if set to true. Otherwise, it will only publish the module.\nFor example:\n```js\npublish: {\n    main: {\n        options: {\n            installBefore: true\n        },\n        src: [\n            'test/fixtures/aFolder/another-module',\n            'test/fixtures/fake-module'\n        ]\n    }\n},\n```\n\n#### options.forceInstall\nType: `boolean`\nDefault value: `false`\n\nWill force module dependencies reinstallation if set to true.\nThis option is useless if `installBefore` is set to false.\nFor example:\n```js\npublish: {\n    main: {\n        options: {\n            installBefore: true,\n            forceInstall: true // will remove node_modules and reinstall all the dependencies\n        },\n        src: [\n            'test/fixtures/aFolder/another-module',\n            'test/fixtures/fake-module'\n        ]\n    }\n},\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(0.0.1)_\n",
  "readmeFilename": "README.md",
  "_id": "grunt-publish@0.0.5",
  "_from": "grunt-publish@~0.0.3"
}
