{
  "name": "grunt-checkbranch",
  "description": "Check that we are on a correct Git branch before proceeding.",
  "version": "0.3.1",
  "homepage": "https://github.com/dymonaz/grunt-checkbranch",
  "author": {
    "name": "Dominykas Blyžė",
    "email": "hello@dominykas.com",
    "url": "http://www.dominykas.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dymonaz/grunt-checkbranch.git"
  },
  "bugs": {
    "url": "https://github.com/dymonaz/grunt-checkbranch/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/dymonaz/grunt-checkbranch/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt": "~0.4.1",
    "grunt-release": "~0.7.0",
    "buster": "~0.7.6",
    "grunt-buster": "~0.3.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "git"
  ],
  "dependencies": {
    "shelljs": "~0.3.0"
  },
  "readme": "# grunt-checkbranch\n\n> Check that we are on a correct Git branch before proceeding.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-checkbranch --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-checkbranch');\n```\n\n## The \"checkbranch\" task\n\n### Overview\nInclude the task as one of your multitasks, optionally passing the desired branch (default: `master`) after a colon, e.g.:\n```js\ngrunt.registerTask(\"default\", [\"test\", \"checkbranch:develop\", \"deploy\"]\n```\n\nIn the example above, the `deploy` task will only be executed, if your project is currently on the `develop` branch - otherwise the run will result in a fatal error.\n\nYou may override this behavior by passing `--no-checkbranch` via command line. You can disable `--no-checkbranch` (i.e. force the check) by setting a second param for the task, e.g. `checkbranch:master:true`.\n\nYou may also negate the test, i.e. exclude a specific branch by prepending an exclamation mark, e.g. `\"checkbranch:!develop\"`.\n\n## Release History\n\n### 0.3.1 (2014-05-26)\n* npm update\n* Travis\n\n### 0.3.0 (2014-02-24)\n* Added support for negating a branch, i.e. \"run everywhere except X\" (thx @Pleochism)\n\n### 0.2.2 (2013-09-29)\n* Added tests\n* Second bool param to force the check.\n\n### 0.2.1 (2013-09-24)\n* Initial release (after a few removed, buggy ones)\n",
  "readmeFilename": "README.md",
  "_id": "grunt-checkbranch@0.3.1",
  "_from": "grunt-checkbranch@*"
}
